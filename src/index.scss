// Required

@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/utilities";

//$navbar-dark-color: rgba($white, 1);
//$navbar-light-color: rgba($black, 1);

// Include custom variable default overrides here

// remove h1
//$h1-font-size: null;

$utilities: map-remove($utilities, "text-align", "background-color", "color");

//@debug $theme-colors;

// Internal Bootstrap function to turn maps into its negative variant.
// It prefixes the keys with `n` and makes the value negative.
@function add-class-suffix($map, $suffix: "") {
    $result: ();
    @each $key, $value in $map {
        //@if $key != 0 {
        $result: map-merge($result, ($key + "-" + $suffix: ($value)));
        //}
    }
    @return $result;
}

//@debug add-class-suffix($theme-colors, "background-color");

/*
header {
    background-color: yellow;
}
*/

$custom_utils: (
    margin-top: (
        responsive: true,
        property: margin-top,
        class: mt,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    margin-y: (
        responsive: false,
        property: margin-top margin-bottom,
        class: my,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    display: (
        responsive: false,
        print: true,
        property: display,
        class: d,
        values: flex
    ),
    flex-direction: (
        responsive: false,
        property: flex-direction,
        class: flex,
        //values: row column row-reverse column-reverse
        values: column
    ),
    text-align: (
        responsive: false,
        property: text-align,
        class: has-text-align,
        values: left right center justify
    ),
    min-viewport-height: (
        property: min-height,
        class: min-vh,
        values: (
            100: 100vh
        )
    ),
    margin-end: (
        responsive: true,
        property: margin-right,
        class: me,
        values:
            map-merge(
                $spacers,
                (
                    auto: auto
                )
            )
    ),
    /*
    margin-top: (
        responsive: false,
        property: margin-top,
        class: mt,
        values: (
            auto: auto
        )
    ),
    */
        margin-bottom:
        (
            responsive: false,
            property: margin-bottom,
            class: mb,
            values: $spacers
        ),
    order: (
        responsive: true,
        property: order,
        values: (
            last: 6
        )
    ),
    // scss-docs-start utils-bg-color
    background-color:
        (
            property: background-color,
            class: has,
            values:
                add-class-suffix(
                    map-merge(
                        $theme-colors,
                        (
                            "body": $body-bg,
                            "white": $white,
                            "transparent": transparent
                        )
                    ),
                    "background-color"
                )
        ),
    // scss-docs-start utils-color
    color:
        (
            property: color,
            class: has,
            values:
                add-class-suffix(
                    map-merge(
                        $theme-colors,
                        (
                            "white": $white,
                            "body": $body-color,
                            "muted": $text-muted,
                            "black-50": rgba($black, 0.5),
                            "white-50": rgba($white, 0.5),
                            "reset": inherit
                        )
                    ),
                    "color"
                )
        )
);

// Merge the maps
//$utilities: map-merge($utilities, $custom_utils);
$utilities: $custom_utils;

$headings-font-weight: null;
$display-font-weight: null;

.has-huge-font-size {
    @extend .display-1;
}

.has-large-font-size {
    @extend .display-4;
}

.has-medium-font-size {
    @extend .display-6;
}

.has-normal-font-size {
    @extend h6;
}

.has-small-font-size {
    @extend small;
}

img {
    max-width: 100%;
    height: auto;
}

/*
.custom-logo-link {
    @extend .navbar-brand;
}
*/

//nav-item

/*
.wp-block-buttons {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

.wp-block-buttons > .wp-block-button {
    display: inline-block;
    margin-left: 0;
    margin-right: 0.5em;
    margin-bottom: 0.5em;
}

.wp-block-button__link {
    color: #fff;
    background-color: #32373c;
    border: none;
    border-radius: 1.55em;
    box-shadow: none;
    cursor: pointer;
    display: inline-block;
    font-size: 1.125em;
    padding: 0.667em 1.333em;
    text-align: center;
    text-decoration: none;
    overflow-wrap: break-word;
}
*/

// Optional
//@import "../node_modules/bootstrap/scss/root";

:root {
    // Use `inspect` for lists so that quoted items keep the quotes.
    // See https://github.com/sass/sass/issues/2383#issuecomment-336349172
    --#{$variable-prefix}font-sans-serif: #{inspect($font-family-sans-serif)};
    --#{$variable-prefix}font-monospace: #{inspect($font-family-monospace)};
    --#{$variable-prefix}gradient: #{$gradient};
}

@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
//@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
//@import "../node_modules/bootstrap/scss/grid";
//@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms"; // form
//@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions"; // navbar
@import "../node_modules/bootstrap/scss/dropdown"; // navbar
//@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav"; // navbar
@import "../node_modules/bootstrap/scss/navbar"; // navbar
//@import "../node_modules/bootstrap/scss/card";
//@import "../node_modules/bootstrap/scss/breadcrumb";
//@import "../node_modules/bootstrap/scss/pagination";
//@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert"; //alert
//@import "../node_modules/bootstrap/scss/progress";
//@import "../node_modules/bootstrap/scss/list-group";
//@import "../node_modules/bootstrap/scss/close";
//@import "../node_modules/bootstrap/scss/toasts";
//@import "../node_modules/bootstrap/scss/modal";
//@import "../node_modules/bootstrap/scss/tooltip";
//@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
//@import "../node_modules/bootstrap/scss/spinners";

// Helpers
//@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";

// font awesome
$fa-font-path: "@fortawesome/fontawesome-free/webfonts";
@import "~@fortawesome/fontawesome-free/scss/variables";
@import "~@fortawesome/fontawesome-free/scss/mixins";
@import "~@fortawesome/fontawesome-free/scss/core";
@import "~@fortawesome/fontawesome-free/scss/solid";
@import "~@fortawesome/fontawesome-free/scss/regular";
@import "~@fortawesome/fontawesome-free/scss/brands";
@import "~@fortawesome/fontawesome-free/scss/fixed-width";

.wp-block-button {
    > .wp-block-button__link {
        border: 2px solid;
        border-color: currentColor;
        border-radius: 4px;
        &[disabled] {
            opacity: 0.5;
        }
    }
}

.site-header,
.site-footer {
    background-color: var(--global--color-header-footer);
    .wp-block-button {
        &:not(.is-style-outline) .wp-block-button__link {
            background-color: var(--global--color-header-footer-accent);
            color: var(--global--color-header-footer);
            &:hover {
                color: var(--global--color-header-footer-accent);
                background-color: transparent;
            }
        }
        &.is-style-outline .wp-block-button__link:hover {
            color: var(--global--color-header-footer);
        }
    }
    .navbar-light .is-style-outline .wp-block-button__link {
        color: $navbar-light-color;
        &:hover {
            background-color: $navbar-light-color;
            border-color: $navbar-light-color;
        }
    }
    .navbar-dark .is-style-outline .wp-block-button__link {
        color: $navbar-dark-color;
        &:hover {
            background-color: $navbar-dark-color;
            border-color: $navbar-dark-color;
        }
    }
}

.site-header {
    .navbar-brand {
        flex: 1 0 0%;
        min-width: 0;
        > h2 {
            white-space: normal;
            color: var(--global--color-header-footer-accent);
        }
    }
    /*
    .navbar-light .navbar-brand > h2 {
        color: $navbar-light-color;
    }
    .navbar-dark .navbar-brand > h2 {
        color: $navbar-dark-color;
    }
    */
}

.site-footer {
    .widget a {
        color: var(--global--color-header-footer-accent);
        text-decoration: none;
    }
    .navbar-light .widget {
        color: $navbar-light-color;
    }
    .navbar-dark .widget {
        color: $navbar-dark-color;
    }
}

@media (min-width: 768px) {
    .site-header .navbar-brand {
        flex: initial;
    }
}

// hide the toggler if there is no nav menu after it.
#site-navigation > .container > button:last-child {
    display: none;
}

// Dark links against a light background
/*
.navbar-light {
    .navbar-brand {
      color: $navbar-light-brand-color;
  
      &:hover,
      &:focus {
        color: $navbar-light-brand-hover-color;
      }
    }
  
    .navbar-nav {
      .nav-link {
        color: $navbar-light-color;
  
        &:hover,
        &:focus {
          color: $navbar-light-hover-color;
        }
  
        &.disabled {
          color: $navbar-light-disabled-color;
        }
      }
  
      .show > .nav-link,
      .nav-link.active {
        color: $navbar-light-active-color;
      }
    }
*/

aside > .widget_zthemename_contact_form {
    padding: 1rem;
    border: 1px solid #dee2e6;
    margin: auto;
    border-radius: 0.25rem;
}

/*
@media (max-width: 767px) {
    #primary.wp-block-columns > .wp-block-column {
        flex-basis: 100% !important;
    }
}

@media (min-width: 768px) {
    #primary.wp-block-columns > aside.wp-block-column {
        flex-basis: 33.33333% !important;
        flex-grow: 0;
    }
}

@media (min-width: 992px) {
    #primary.wp-block-columns > aside.wp-block-column {
        flex-basis: 25% !important;
    }
}

#primary.wp-block-columns > main.wp-block-column {
    flex-grow: 1;
}

@media (max-width: 767px) {
    #primary.wp-block-columns {
        flex-wrap: nowrap;
    }
}
*/

.wp-block-columns {
    display: flex;
    //margin-bottom: 1.75em;
    flex-wrap: wrap;
}

.wp-block-columns > * {
    flex-shrink: 0;
    width: 100%;
    max-width: 100%;
}

.wp-block-column {
    flex: 1 0 0%;
}

@media (min-width: 768px) {
    aside.widget-area {
        flex: 0 0 auto;
        width: 33.33333%;
        margin-left: 2em;
    }
}

@media (min-width: 992px) {
    aside.widget-area {
        width: 25%;
    }
}

//@media (min-width: 600px) and (max-width: 767px) {

//@media (min-width: 600px) and (max-width: 767px) { *="flex-basis"
@media (max-width: 575px) {
    .wp-block-column {
        flex: 0 0 auto;
        width: 100%;
    }
}

@media (min-width: 576px) and (max-width: 991px) {
    .wp-block-column:not(:only-child) {
        flex-basis: calc(50% - 1em);
    }
}

.wp-block-column[style*="flex-basis"] {
    //background-color: aqua;
    flex-grow: 0;
}

.wp-block-column[style*="flex-basis"] + .wp-block-column {
    //background-color: rgb(255, 136, 0);
    flex: 1 0 0;
    /*
    flex-grow: 1;
    flex-basis: 0;
    */
}

.wp-block-column.is-vertically-aligned-center {
    align-self: center;
}

@media (min-width: 576px) {
    .wp-block-column:not(:first-child) {
        margin-left: 1em;
    }
}

/* large - display 3 */
/*
@media (min-width: 992px) {
    .carousel-item-next:not(.carousel-item-start),
    .active.carousel-item-end {
        transform: translateX(33%);
    }

    .carousel-item-prev:not(.carousel-item-end),
    .active.carousel-item-start {
        transform: translateX(-33%);
    }
}

.carousel-inner .carousel-item.active,
.carousel-inner .carousel-item-next,
.carousel-inner .carousel-item-prev {
    display: flex;
}

.carousel-item.active,
.carousel-item-next,
.carousel-item-prev {
    display: flex;
}

.carousel-item-end,
.carousel-item-start {
    transform: translateX(0);
}
*/

@media (max-width: 767px) {
    .carousel-inner .carousel-item > div {
        display: none;
    }
    .carousel-inner .carousel-item > div:first-child {
        display: block;
    }
}

.carousel-inner .carousel-item.active,
.carousel-inner .carousel-item-next,
.carousel-inner .carousel-item-prev {
    display: flex;
}

/* medium and up screens */
@media (min-width: 768px) {
    .carousel-inner .carousel-item-end.active,
    .carousel-inner .carousel-item-next {
        transform: translateX(25%);
    }

    .carousel-inner .carousel-item-start.active,
    .carousel-inner .carousel-item-prev {
        transform: translateX(-25%);
    }
}

.carousel-inner .carousel-item-end,
.carousel-inner .carousel-item-start {
    transform: translateX(0);
}
